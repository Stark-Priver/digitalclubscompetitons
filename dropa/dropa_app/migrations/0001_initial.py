# Generated by Django 5.2.6 on 2025-09-09 21:59

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_packages', models.IntegerField(default=0)),
                ('delivered_packages', models.IntegerField(default=0)),
                ('failed_packages', models.IntegerField(default=0)),
                ('average_delivery_time', models.FloatField(blank=True, null=True)),
                ('average_distance', models.FloatField(blank=True, null=True)),
                ('total_couriers', models.IntegerField(default=0)),
                ('active_couriers', models.IntegerField(default=0)),
                ('customer_satisfaction', models.FloatField(blank=True, null=True)),
                ('revenue', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('sender', 'Sender'), ('receiver', 'Receiver'), ('courier', 'Courier'), ('admin', 'Admin')], default='sender', max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('rating', models.FloatField(default=5.0)),
                ('total_deliveries', models.IntegerField(default=0)),
                ('is_online', models.BooleanField(default=False)),
                ('last_location_lat', models.FloatField(blank=True, null=True)),
                ('last_location_lng', models.FloatField(blank=True, null=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='dropa_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='dropa_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DashboardFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('bug_report', 'Bug Report'), ('feature_request', 'Feature Request'), ('general_feedback', 'General Feedback'), ('performance_issue', 'Performance Issue')], default='general_feedback', max_length=20)),
                ('feedback', models.TextField()),
                ('rating', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=64, unique=True)),
                ('from_dipan_id', models.CharField(max_length=64)),
                ('from_city_name', models.CharField(max_length=64)),
                ('to_city_name', models.CharField(blank=True, max_length=64, null=True)),
                ('poi_lng', models.FloatField()),
                ('poi_lat', models.FloatField()),
                ('receipt_lng', models.FloatField(blank=True, null=True)),
                ('receipt_lat', models.FloatField(blank=True, null=True)),
                ('sign_lng', models.FloatField(blank=True, null=True)),
                ('sign_lat', models.FloatField(blank=True, null=True)),
                ('receipt_time', models.DateTimeField(blank=True, null=True)),
                ('sign_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('aoi_id', models.CharField(blank=True, max_length=64)),
                ('typecode', models.CharField(blank=True, max_length=64)),
                ('ds', models.CharField(blank=True, max_length=32)),
                ('status', models.CharField(choices=[('pending', 'Pending Pickup'), ('picked_up', 'Picked Up'), ('in_transit', 'In Transit'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('failed', 'Failed Delivery')], default='pending', max_length=32)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('predicted_delivery_time', models.FloatField(blank=True, help_text='Predicted delivery time in minutes', null=True)),
                ('is_anomaly', models.BooleanField(default=False)),
                ('anomaly_score', models.FloatField(blank=True, null=True)),
                ('package_weight', models.FloatField(blank=True, null=True)),
                ('package_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('special_instructions', models.TextField(blank=True)),
                ('delivery_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deliveries', to=settings.AUTH_USER_MODEL)),
                ('receiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_packages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_packages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OTPLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp_code', models.CharField(max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('attempts', models.IntegerField(default=0)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otp_logs', to='dropa_app.package')),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_lat', models.FloatField()),
                ('start_lng', models.FloatField()),
                ('end_lat', models.FloatField()),
                ('end_lng', models.FloatField()),
                ('estimated_distance_km', models.FloatField()),
                ('estimated_duration_minutes', models.IntegerField()),
                ('actual_distance_km', models.FloatField(blank=True, null=True)),
                ('actual_duration_minutes', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planned', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('waypoints', models.JSONField(blank=True, default=list)),
                ('traffic_conditions', models.CharField(choices=[('light', 'Light Traffic'), ('moderate', 'Moderate Traffic'), ('heavy', 'Heavy Traffic'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('weather_conditions', models.CharField(choices=[('clear', 'Clear'), ('rain', 'Rain'), ('heavy_rain', 'Heavy Rain'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('courier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routes', to=settings.AUTH_USER_MODEL)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routes', to='dropa_app.package')),
            ],
            options={
                'verbose_name': 'Delivery Route',
                'verbose_name_plural': 'Delivery Routes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourierLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_time', models.DateTimeField(auto_now_add=True)),
                ('event', models.CharField(choices=[('pickup_assigned', 'Pickup Assigned'), ('pickup_started', 'Pickup Started'), ('package_picked_up', 'Package Picked Up'), ('delivery_started', 'Delivery Started'), ('package_delivered', 'Package Delivered'), ('delivery_failed', 'Delivery Failed'), ('location_update', 'Location Update')], max_length=50)),
                ('location_lat', models.FloatField(blank=True, null=True)),
                ('location_lng', models.FloatField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('courier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courier_logs', to=settings.AUTH_USER_MODEL)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='dropa_app.package')),
            ],
            options={
                'ordering': ['-log_time'],
            },
        ),
        migrations.CreateModel(
            name='Anomaly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('anomaly_type', models.CharField(choices=[('delivery_time', 'Unusual Delivery Time'), ('route_deviation', 'Route Deviation'), ('location_anomaly', 'Location Anomaly'), ('performance_drop', 'Performance Drop'), ('fraud_detection', 'Potential Fraud')], default='delivery_time', max_length=20)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('courier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='anomalies', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_anomalies', to=settings.AUTH_USER_MODEL)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anomalies', to='dropa_app.package')),
            ],
            options={
                'ordering': ['-detected_at'],
            },
        ),
    ]
